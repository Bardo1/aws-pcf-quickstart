---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: webpage
  type: docker-image
  source:
    repository: cholick/concourse-webpage-resource
    tag: latest

resources:
- name: quickstart-repo
  type: git
  source:
    branch: master
    uri: https://github.com/cf-platform-eng/aws-pcf-quickstart
    username: {{github_user_name}}
    password: {{github_access_token}}
    ignore_paths:
      - ci/*.yml

- name: aws-quickstart-repo
  type: git
  source:
    branch: develop
    uri: https://github.com/cf-platform-eng/quickstart-pivotal-cloudfoundry
    username: {{github_user_name}}
    password: {{github_access_token}}

- name: cloud-formation-rc
  type: s3
  source:
    bucket: aws-pcf-quickstart-templates
    region_name: us-west-2
    versioned_file: pivotal/cloudfoundry/latest/templates/cloud-formation.template
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: ops-manager-release-candiate
  type: s3
  source:
    bucket: aws-pcf-quickstart-templates
    region_name: us-west-2
    versioned_file: pivotal/cloudfoundry/latest/templates/ops-manager.template
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: cloud-formation-outer-template-rc
  type: s3
  source:
    bucket: aws-pcf-quickstart-templates
    region_name: us-west-2
    versioned_file: pivotal/cloudfoundry/latest/templates/pivotal-cloudfoundry.template
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: quickstart-latest-release-candidate
  type: s3
  source:
    bucket: aws-pcf-quickstart-templates
    region_name: us-west-2
    versioned_file: pivotal/cloudfoundry/latest/scripts/quickstart.tgz
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: ami-version
  type: semver
  source:
    driver: git
    uri: https://github.com/cf-platform-eng/aws-pcf-quickstart
    branch: ami_version
    file: ami_version
    username: {{github_user_name}}
    password: {{github_access_token}}

- name: ert-tile
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    copy_metadata: true
    product_slug: elastic-runtime
    product_version: 1\.11\.7

- name: opsman-tile
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    copy_metadata: true
    product_slug: ops-manager
    product_version: 1\.11\.6

- name: packer-result
  type: s3
  source:
    bucket: aws-pcf-quickstart-releases
    region_name: us-west-2
    regexp: packer-result-(.*).json
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: ami-mapping
  type: s3
  source:
    bucket: aws-pcf-quickstart-releases
    region_name: us-west-2
    regexp: ami-mapping-(.*).json
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: awslogs-agent-setup
  type: webpage
  source:
    filename: awslogs-agent-setup.py
    url: https://s3.amazonaws.com//aws-cloudwatch/downloads/latest/awslogs-agent-setup.py

- name: aws-cfn-bootstrap
  type: webpage
  source:
    filename: aws-cfn-bootstrap-latest.tar.gz
    url: https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

- name: aws-pcf-concourse-state
  type: s3
  source:
    bucket: aws-pcf-concourse-state
    region_name: us-west-2
    versioned_file: stackid
    access_key_id: {{aws_admin_key_id}}
    secret_access_key: {{aws_admin_secret_access_key}}

- name: quickstart-github-release
  type: github-release
  source:
    owner: cf-platform-eng
    repository: aws-pcf-quickstart
    access_token: {{github_access_token}}

- name: pivnet-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: pivnet-cli
    access_token: {{github_access_token}}
    version: v0.0.49

- name: om-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: om
    access_token: {{github_access_token}}
    version: v0.0.24

- name: version
  type: semver
  source:
    driver: git
    uri: https://github.com/cf-platform-eng/aws-pcf-quickstart
    branch: quickstart_release_version
    file: quickstart_release_version
    username: {{github_user_name}}
    password: {{github_access_token}}

- name: quickstart-versioned-release
  type: s3
  source:
    bucket: aws-pcf-quickstart-releases
    region_name: us-west-2
    regexp: quickstart-(.*).tgz
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

jobs:
- name: unit-test
  plan:
  - get: quickstart-repo
    trigger: true
  - task: unit-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: quickstart-repo
      run:
        path: bash
        args:
        - -exc
        - |
          pushd quickstart-repo
          pip install -r requirements.txt
          python -m unittest discover -v -s ./lib -p '*_test.py'
          popd

- name: build-ami
  plan:
  - get: quickstart-repo
  - get: awslogs-agent-setup
  - get: aws-cfn-bootstrap
  - get: ami-version
    params:
      bump: patch
  - task: build-ami
    attempts: 2
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: quickstart-repo
      - name: ami-version
      - name: awslogs-agent-setup
      - name: aws-cfn-bootstrap
      outputs:
      - name: output
      params:
        AWS_ACCESS_KEY_ID: {{aws_admin_key_id}}
        AWS_SECRET_ACCESS_KEY: {{aws_admin_secret_access_key}}
      run:
        path: bash
        args:
        - -exc
        - |
          ./quickstart-repo/ci/generate-packer.py
          mkdir -p output
          cp manifest.json output/packer-result-$(cat ./ami-version/version).json
  - put: ami-version
    params:
      file: ami-version/version
  - put: packer-result
    params:
      file: output/packer-result-*.json

- name: upload-inner-template-rcs
  plan:
  - get: quickstart-repo
    trigger: true
    passed:
      - unit-test
  - put: cloud-formation-rc
    params:
      file: quickstart-repo/cloudformation/cloud-formation.json
      acl: public-read
  - put: ops-manager-release-candiate
    params:
      file: quickstart-repo/cloudformation/ops-manager.json
      acl: public-read

- name: replicate-ami
  plan:
  - get: quickstart-repo
  - get: packer-result
    trigger: true
    passed:
    - build-ami
  - get: ami-version
  - get: opsman-tile
    params:
      globs:
        - '*.yml'
  - task: replicate-ami
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: quickstart-repo
      - name: packer-result
      - name: ami-version
      - name: opsman-tile
      outputs:
      - name: output
      params:
        AWS_ACCESS_KEY_ID: {{aws_admin_key_id}}
        AWS_SECRET_ACCESS_KEY: {{aws_admin_secret_access_key}}
      run:
        path: bash
        args:
        - -exc
        - |
          mkdir -p output
          pip install PyYAML
          ./quickstart-repo/ci/copy-image.py
  - put: ami-mapping
    params:
      file: output/ami-mapping-*.json

- name: instantiate-outer-template-rc
  plan:
  - get: quickstart-repo
    trigger: true
    passed:
      - unit-test
  - get: ami-mapping
    trigger: true
    passed:
      - replicate-ami
  - get: opsman-tile
    params:
      globs:
        - '*.yml'
  - task: build-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: python
          tag: "3"
      inputs:
      - name: quickstart-repo
      - name: ami-mapping
      - name: opsman-tile
      outputs:
      - name: output
      run:
        path: bash
        args:
        - -exc
        - |
          pushd quickstart-repo
          pip install jinja2 PyYAML
          python3 ci/instantiate-quickstart-template.py
          popd
          cp quickstart-repo/cloudformation/quickstart-template-rc.yml output
  - put: cloud-formation-outer-template-rc
    params:
      file: output/quickstart-template-rc.yml
      acl: public-read

- name: github-release
  plan:
  - get: pivnet-release
  - get: om-release
  - get: quickstart-repo
    trigger: true
    params:
      ignore_paths:
        - cloudformation/*
        - ci/*.yml
    passed:
      - unit-test
  - get: version
    params:
      bump: patch
  - get: ert-tile
    params:
      globs: []
  - task: build-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: python
          tag: "3"
      inputs:
      - name: pivnet-release
      - name: om-release
      - name: quickstart-repo
      - name: version
      - name: ert-tile
      outputs:
      - name: output
      params:
        PIVNET_TOKEN: {{pivnet_token}}
      run:
        path: bash
        args:
        - -exc
        - |
          mkdir -p quickstart
          mkdir -p quickstart/bin
          cp -r quickstart-repo/* quickstart
          cp om-release/om-linux quickstart/bin/om
          chmod +x quickstart/bin/om
          cp pivnet-release/pivnet-linux* quickstart/bin/pivnet
          chmod +x quickstart/bin/pivnet

          pushd quickstart
          mkdir -p vendor
          pip download --no-binary :all: --dest vendor -r requirements.txt

          pip install requests
          python3 ci/build-version-config.py

          popd

          mkdir -p output
          tar -czvf output/quickstart-`cat version/version`.tgz quickstart
  - put: version
    params:
      file: version/version
  - put: quickstart-github-release
    params:
      name: version/version
      tag: version/version
      globs:
      - output/quickstart-*.tgz

- name: build-quickstart-rc
  plan:
  - get: version
    passed:
      - github-release
  - get: quickstart-github-release
    trigger: true
    passed:
      - github-release
  - put: quickstart-versioned-release
    params:
      file: quickstart-github-release/quickstart-*.tgz
  - put: quickstart-latest-release-candidate
    params:
      file: quickstart-github-release/quickstart-*.tgz

- name: integration-test
  plan:
  - get: quickstart-repo
    trigger: false
    passed:
      - github-release
      - upload-inner-template-rcs
  - get: quickstart-latest-release-candidate
    trigger: false
    passed:
    - build-quickstart-rc
  - get: cloud-formation-outer-template-rc
    trigger: false
    passed:
    - instantiate-outer-template-rc
  - task: integration-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: python
          tag: "3"
      inputs:
      - name: quickstart-repo
      - name: cloud-formation-outer-template-rc
      outputs:
      - name: output
      params:
        AWS_CF_PASSWORD: {{aws_cf_password}}
        AWS_CF_DOMAIN: {{aws_cf_domain}}
        AWS_CF_HOSTEDZONEID: {{aws_cf_hostedzoneid}}
        AWS_CF_PCFKEYPAIR: {{aws_cf_pcfkeypair}}
        AWS_CF_PIVNETTOKEN: {{aws_cf_pivnettoken}}
        AWS_ACCESS_KEY_ID: {{aws_admin_key_id}}
        AWS_SECRET_ACCESS_KEY: {{aws_admin_secret_access_key}}
        AWS_INTEGRATION_REGION: {{aws_integration_region}}
        US_EAST_1_SSLCERTIFICATEARN: {{us_east_1_sslcertificatearn}}
        US_EAST_2_SSLCERTIFICATEARN: {{us_east_2_sslcertificatearn}}
        US_WEST_2_SSLCERTIFICATEARN: {{us_west_2_sslcertificatearn}}
        CA_CENTRAL_1_SSLCERTIFICATEARN: {{ca_central_1_sslcertificatearn}}
        EU_WEST_1_SSLCERTIFICATEARN: {{eu_west_1_sslcertificatearn}}
        EU_CENTRAL_1_SSLCERTIFICATEARN: {{eu_central_1_sslcertificatearn}}
        EU_WEST_2_SSLCERTIFICATEARN: {{eu_west_2_sslcertificatearn}}
        AP_SOUTHEAST_1_SSLCERTIFICATEARN: {{ap_southeast_1_sslcertificatearn}}
        AP_SOUTHEAST_2_SSLCERTIFICATEARN: {{ap_southeast_2_sslcertificatearn}}
        AP_NORTHEAST_2_SSLCERTIFICATEARN: {{ap_northeast_2_sslcertificatearn}}
        AP_NORTHEAST_1_SSLCERTIFICATEARN: {{ap_northeast_1_sslcertificatearn}}
        AP_SOUTH_1_SSLCERTIFICATEARN: {{ap_south_1_sslcertificatearn}}
        SA_EAST_1_SSLCERTIFICATEARN: {{sa_east_1_sslcertificatearn}}
      run:
        path: bash
        args:
        - -exc
        - |
          # run create stack from the template before
          pushd quickstart-repo
          pip install -r requirements.txt
          python ./ci/create-stack.py '../cloud-formation-outer-template-rc/pivotal-cloudfoundry.template'
          popd
          cp quickstart-repo/stackid output/stackid
  - put: aws-pcf-concourse-state
    params:
      file: output/stackid

- name: check-cf-status
  plan:
  - get: om-release
  - get: quickstart-repo
    passed:
    - integration-test
    trigger: true
  - task: check-cf-status
    attempts: 10
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: om-release
      - name: quickstart-repo
      params:
        AWS_CF_PASSWORD: {{aws_cf_password}}
        AWS_CF_DOMAIN: {{aws_cf_domain}}
      run:
        path: bash
        args:
        - -exc
        - |
          mv om-release/om-linux /usr/local/bin/om
          chmod +x /usr/local/bin/om
          pushd quickstart-repo
          pip install -r requirements.txt
          sleep 30
          python ./ci/check-status.py
          popd

- name: delete-cf
  plan:
  - get: om-release
  - get: quickstart-repo
    passed:
    - check-cf-status
  - get: aws-pcf-concourse-state
    passed:
    - integration-test
  - task: delete-cf
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: quickstart-repo
      - name: aws-pcf-concourse-state
      params:
        AWS_ACCESS_KEY_ID: {{aws_admin_key_id}}
        AWS_SECRET_ACCESS_KEY: {{aws_admin_secret_access_key}}
        AWS_INTEGRATION_REGION: {{aws_integration_region}}
      run:
        path: bash
        args:
        - -exc
        - |
          pushd quickstart-repo
          pip install -r requirements.txt
          python ./ci/delete-stack.py
          popd

- name: commit-and-pr-aws-quickstart-repo
  plan:
  - get: quickstart-repo
    trigger: false
    passed:
    - integration-test
  - get: aws-quickstart-repo
  - get: quickstart-latest-release-candidate #python code
    passed:
      - integration-test
  - get: cloud-formation-rc
    passed:
    - upload-inner-template-rcs
  - get: ops-manager-release-candiate
    passed:
    - upload-inner-template-rcs
  - get: cloud-formation-outer-template-rc
    passed:
    - integration-test
  - task: commit-aws-quickstart-repo
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: quickstart-repo
      - name: aws-quickstart-repo
      - name: quickstart-latest-release-candidate
      - name: cloud-formation-rc
      - name: ops-manager-release-candiate
      - name: cloud-formation-outer-template-rc
      outputs:
      - name: aws-quickstart-repo-updated
      params: {}
      run:
        path: bash
        args:
        - -exc
        - |
          pushd quickstart-repo
          sha=$(git rev-parse HEAD)
          popd

          cp -r aws-quickstart-repo/. aws-quickstart-repo-updated

          #todo: are these paths actually right? What about full path in s3
          cp quickstart-latest-release-candidate/quickstart.tgz aws-quickstart-repo-updated/scripts/quickstart.tgz
          cp cloud-formation-rc/cloud-formation.template aws-quickstart-repo-updated/templates/cloud-formation.template
          cp ops-manager-release-candiate/ops-manager.template aws-quickstart-repo-updated/templates/ops-manager.template
          cp cloud-formation-outer-template-rc/pivotal-cloudfoundry.template aws-quickstart-repo-updated/templates/pivotal-cloudfoundry.template

          pushd aws-quickstart-repo-updated

          pushd scripts/quickstart
          git checkout master && git pull
          git checkout $sha
          popd

          git config --global user.name "Pivotal Concourse"
          git config --global user.email "ci@example.com" #todo: better email....

          git add -A .
          git commit -m "Commiting release candiate for PR"

          popd
  - put: aws-quickstart-repo
    params:
      repository: aws-quickstart-repo-updated

- name: make_pr_to_aws
  plan:
  - get: quickstart-repo
    passed:
    - commit-and-pr-aws-quickstart-repo
  - get: aws-quickstart-repo
  - get: version
  - task: make_pr_to_aws
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: quickstart-repo
      - name: version
      params:
        GITHUB_ACCESS_TOKEN: {{github_access_token}}
      run:
        path: bash
        args:
        - -exc
        - |
          pip install requests
          python3 quickstart-repo/ci/github-pullrequest.py
