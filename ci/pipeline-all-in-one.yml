---
resource_types:
- name: ami
  type: docker-image
  source:
    repository: jdub/ami-resource

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: webpage
  type: docker-image
  source:
    repository: cholick/concourse-webpage-resource
    tag: latest

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest


resources:

- name: quickstart-repo
  type: git
  source:
    branch: '1_12'
    uri: https://github.com/cf-platform-eng/aws-pcf-quickstart
    username: {{github_user_name}}
    password: {{github_access_token}}
    ignore_paths:
      - ci/*.yml

- name: cloud-formation-template-alpha
  type: s3
  source:
    bucket: aws-pcf-quickstart-templates-1-12
    region_name: us-west-2
    versioned_file: pivotal/cloudfoundry/latest/templates/cloud-formation.template
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: ops-manager-template-alpha
  type: s3
  source:
    bucket: aws-pcf-quickstart-templates-1-12
    region_name: us-west-2
    versioned_file: pivotal/cloudfoundry/latest/templates/ops-manager.template
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: pivotal-cloudfoundry-template-alpha
  type: s3
  source:
    bucket: aws-pcf-quickstart-templates-1-12
    region_name: us-west-2
    versioned_file: pivotal/cloudfoundry/latest/templates/pivotal-cloudfoundry.template
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: quickstart-scripts-alpha
  type: s3
  source:
    bucket: aws-pcf-quickstart-templates-1-12
    region_name: us-west-2
    versioned_file: pivotal/cloudfoundry/latest/scripts/quickstart.tgz
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: ert-tile
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    copy_metadata: true
    product_slug: elastic-runtime
    product_version: 1\.12\.*

- name: opsman-tile
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    copy_metadata: true
    product_slug: ops-manager
    product_version: 1\.12\.*

- name: ami-mapping
  type: s3
  source:
    bucket: aws-pcf-quickstart-releases-1-12
    region_name: us-west-2
    regexp: ami-mapping-(.*).json
    access_key_id: {{s3_access_key_id}}
    secret_access_key: {{s3_secret_access_key}}

- name: aws-pcf-concourse-state
  type: s3
  source:
    bucket: aws-pcf-concourse-state
    region_name: us-west-2
    versioned_file: stackid
    access_key_id: {{aws_admin_key_id}}
    secret_access_key: {{aws_admin_secret_access_key}}

- name: pivnet-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: pivnet-cli
    access_token: {{github_access_token}}
    version: v0.0.49

- name: om-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: om
    access_token: {{github_access_token}}
    version: v0.0.24

- name: slack-alert
  type: slack-notification
  source:
    url: {{slack_hook}}


jobs:

- name: unit-test
  plan:
  - get: quickstart-repo
    trigger: true
  - task: unit-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: quickstart-repo
      run:
        path: bash
        args:
        - -exc
        - |
          pushd quickstart-repo
          pip install -r requirements.txt
          python -m unittest discover -v -s ./lib -p '*_test.py'
          popd

- name: upload-inner-template-alpha
  plan:
  - get: quickstart-repo
    trigger: true
    passed:
      - unit-test
  - put: cloud-formation-template-alpha
    params:
      file: quickstart-repo/cloudformation/cloud-formation.json
      acl: public-read
  - put: ops-manager-template-alpha
    params:
      file: quickstart-repo/cloudformation/ops-manager.json
      acl: public-read

- name: instantiate-outer-template-alpha
  plan:
  - get: quickstart-repo
    trigger: true
    passed:
      - unit-test
  - get: ami-mapping
  - get: opsman-tile
    trigger: true
    params:
      globs:
        - '*.yml'
  - task: instantiate-outer-template
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: python
          tag: "3"
      inputs:
      - name: quickstart-repo
      - name: ami-mapping
      - name: opsman-tile
      outputs:
      - name: output
      run:
        path: bash
        args:
        - -exc
        - |
          pushd quickstart-repo
          pip install jinja2 PyYAML
          python3 ci/instantiate-quickstart-template.py
          popd
          cp quickstart-repo/cloudformation/pivotal-cloudfoundry.template output
  - put: pivotal-cloudfoundry-template-alpha
    params:
      file: output/pivotal-cloudfoundry.template
      acl: public-read

- name: build-quickstart-alpha
  plan:
  - get: pivnet-release
  - get: om-release
  - get: quickstart-repo
    trigger: true
    params:
      ignore_paths:
        - cloudformation/*
        - ci/*.yml
    passed:
      - unit-test
  - get: ert-tile
    trigger: true
    params:
      globs: []
  - task: build-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: python
          tag: "3"
      inputs:
      - name: pivnet-release
      - name: om-release
      - name: quickstart-repo
      - name: ert-tile
      outputs:
      - name: output
      params:
        PIVNET_TOKEN: {{pivnet_token}}
      run:
        path: bash
        args:
        - -exc
        - |
          mkdir -p quickstart
          mkdir -p quickstart/bin
          cp -r quickstart-repo/* quickstart
          cp om-release/om-linux quickstart/bin/om
          chmod +x quickstart/bin/om
          cp pivnet-release/pivnet-linux* quickstart/bin/pivnet
          chmod +x quickstart/bin/pivnet

          pushd quickstart
          mkdir -p vendor
          pip download --no-binary :all: --dest vendor -r requirements.txt

          pip install requests
          python3 ci/build-version-config.py

          popd

          mkdir -p output
          tar -czvf output/quickstart.tgz quickstart
  - put: quickstart-scripts-alpha
    params:
      acl: public-read
      file: output/quickstart.tgz

- name: integration-test
  plan:
  - get: quickstart-repo
    trigger: false
    passed:
      - upload-inner-template-alpha
  - get: quickstart-scripts-alpha
    trigger: false
    passed:
    - build-quickstart-alpha
  - get: pivotal-cloudfoundry-template-alpha
    trigger: false
    passed:
    - instantiate-outer-template-alpha
  - task: integration-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: python
          tag: "3"
      inputs:
      - name: quickstart-repo
      - name: pivotal-cloudfoundry-template-alpha
      outputs:
      - name: output
      params:
        AWS_CF_PASSWORD: {{aws_cf_password}}
        AWS_CF_DOMAIN: {{aws_cf_domain}}
        AWS_CF_HOSTEDZONEID: {{aws_cf_hostedzoneid}}
        AWS_CF_PCFKEYPAIR: {{aws_cf_pcfkeypair}}
        AWS_CF_PIVNETTOKEN: {{aws_cf_pivnettoken}}
        AWS_ACCESS_KEY_ID: {{aws_admin_key_id}}
        AWS_SECRET_ACCESS_KEY: {{aws_admin_secret_access_key}}
        AWS_INTEGRATION_REGION: {{aws_integration_region}}
        US_EAST_1_SSLCERTIFICATEARN: {{us_east_1_sslcertificatearn}}
        US_EAST_2_SSLCERTIFICATEARN: {{us_east_2_sslcertificatearn}}
        US_WEST_1_SSLCERTIFICATEARN: {{us_west_1_sslcertificatearn}}
        US_WEST_2_SSLCERTIFICATEARN: {{us_west_2_sslcertificatearn}}
        CA_CENTRAL_1_SSLCERTIFICATEARN: {{ca_central_1_sslcertificatearn}}
        EU_WEST_1_SSLCERTIFICATEARN: {{eu_west_1_sslcertificatearn}}
        EU_CENTRAL_1_SSLCERTIFICATEARN: {{eu_central_1_sslcertificatearn}}
        EU_WEST_2_SSLCERTIFICATEARN: {{eu_west_2_sslcertificatearn}}
        AP_SOUTHEAST_1_SSLCERTIFICATEARN: {{ap_southeast_1_sslcertificatearn}}
        AP_SOUTHEAST_2_SSLCERTIFICATEARN: {{ap_southeast_2_sslcertificatearn}}
        AP_NORTHEAST_2_SSLCERTIFICATEARN: {{ap_northeast_2_sslcertificatearn}}
        AP_NORTHEAST_1_SSLCERTIFICATEARN: {{ap_northeast_1_sslcertificatearn}}
        AP_SOUTH_1_SSLCERTIFICATEARN: {{ap_south_1_sslcertificatearn}}
        SA_EAST_1_SSLCERTIFICATEARN: {{sa_east_1_sslcertificatearn}}
      run:
        path: bash
        args:
        - -exc
        - |
          # run create stack from the template before
          pushd quickstart-repo
          pip install -r requirements.txt
          python ./ci/create-stack.py '../pivotal-cloudfoundry-template-alpha/pivotal-cloudfoundry.template'
          popd
          cp quickstart-repo/stackid output/stackid
    on_failure:
      aggregate:
        - put: slack-alert
          params:
            icon_emoji: ":sad_panda:"
            username: Concourse CI
            channel: "@jshah"
            text: "Integration test failed"
        - task: delete-buckets
          config:
            inputs:
            - name: quickstart-repo
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: python
                tag: "3"
            params:
              AWS_ACCESS_KEY_ID: {{aws_admin_key_id}}
              AWS_SECRET_ACCESS_KEY: {{aws_admin_secret_access_key}}
            run:
              path: bash
              args:
              - -exc
              - |
                pushd quickstart-repo
                pip install boto3
                python ./ci/delete-buckets.py
                popd
  - put: aws-pcf-concourse-state
    params:
      file: output/stackid

- name: check-cf-status
  plan:
  - get: om-release
  - get: quickstart-repo
    passed:
    - integration-test
  - get: aws-pcf-concourse-state
    trigger: true
    passed:
    - integration-test
  - task: check-cf-status
    attempts: 10
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: om-release
      - name: quickstart-repo
      params:
        AWS_CF_PASSWORD: {{aws_cf_password}}
        AWS_CF_DOMAIN: {{aws_cf_domain}}
      run:
        path: bash
        args:
        - -exc
        - |
          mv om-release/om-linux /usr/local/bin/om
          chmod +x /usr/local/bin/om
          pushd quickstart-repo
          pip install -r requirements.txt
          sleep 30
          python ./ci/check-status.py
          popd

- name: delete-cf
  plan:
  - get: om-release
  - get: quickstart-repo
    passed:
    - check-cf-status
  - get: aws-pcf-concourse-state
    trigger: false
    passed:
    - integration-test
  - task: delete-cf
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfplatformeng/quickstart-ci
      inputs:
      - name: quickstart-repo
      - name: aws-pcf-concourse-state
      params:
        AWS_ACCESS_KEY_ID: {{aws_admin_key_id}}
        AWS_SECRET_ACCESS_KEY: {{aws_admin_secret_access_key}}
        AWS_INTEGRATION_REGION: {{aws_integration_region}}
      run:
        path: bash
        args:
        - -exc
        - |
          pushd quickstart-repo
          pip install -r requirements.txt
          python ./ci/delete-stack.py
          popd
    ensure:
      aggregate:
        - task: delete-buckets
          config:
            inputs:
            - name: quickstart-repo
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: python
                tag: "3"
            params:
              AWS_ACCESS_KEY_ID: {{aws_admin_key_id}}
              AWS_SECRET_ACCESS_KEY: {{aws_admin_secret_access_key}}
            run:
              path: bash
              args:
              - -exc
              - |
                pushd quickstart-repo
                pip install boto3
                python ./ci/delete-buckets.py
                popd
