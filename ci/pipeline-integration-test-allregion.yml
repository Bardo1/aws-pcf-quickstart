---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: quickstart-repo
  type: git
  source:
    branch: master
    uri: https://github.com/cf-platform-eng/aws-pcf-quickstart
    username: ((github_user_name))
    password: ((github_access_token))
    ignore_paths:
      - ci/*.yml

- name: om-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: om
    access_token: ((github_access_token))
    version: v0.0.22

- name: aws-pcf-concourse-state
  type: s3
  source:
    bucket: snw-aws-pcf-concourse-state
    region_name: us-west-2
    versioned_file: stackid
    access_key_id: ((aws_admin_key_id))
    secret_access_key: ((aws_admin_secret_access_key))

- name: pivotal-cloudfoundry-template-alpha
  type: s3
  source:
    bucket: snw-aws-pcf-quickstart-templates
    region_name: us-west-2
    versioned_file: quickstart-pivotal-cloudfoundry/templates/pivotal-cloudfoundry.template
    access_key_id: ((s3_access_key_id))
    secret_access_key: ((s3_secret_access_key))

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack_hook))

templates:
params: &some_values
  AWS_CF_PASSWORD: ((aws_cf_password))
  AWS_CF_DOMAIN: ((aws_cf_domain))
  AWS_CF_HOSTEDZONEID: ((aws_cf_hostedzoneid))
  AWS_CF_PCFKEYPAIR: ((aws_cf_pcfkeypair))
  AWS_CF_PIVNETTOKEN: ((aws_cf_pivnettoken))
  AWS_ACCESS_KEY_ID: ((aws_admin_key_id))
  AWS_SECRET_ACCESS_KEY: ((aws_admin_secret_access_key))
  US_EAST_1_SSLCERTIFICATEARN: ((us_east_1_sslcertificatearn))
  US_WEST_1_SSLCERTIFICATEARN: ((us_west_1_sslcertificatearn))
  US_WEST_2_SSLCERTIFICATEARN: ((us_west_2_sslcertificatearn))
  EU_CENTRAL_1_SSLCERTIFICATEARN: ((eu_central_1_sslcertificatearn))
  EU_WEST_1_SSLCERTIFICATEARN: ((eu_west_1_sslcertificatearn))
  AP_SOUTHEAST_2_SSLCERTIFICATEARN: ((ap_southeast_2_sslcertificatearn))

run: &run
  path: bash
  args:
  - -exc
  - |
    pushd quickstart-repo
    pip install -r requirements.txt
    python ./ci/create-stack.py '../pivotal-cloudfoundry-template-alpha/pivotal-cloudfoundry.template' ${AWS_INTEGRATION_REGION}
    popd
    cp quickstart-repo/stackid output/stackid

on_failure: &on_failure
  aggregate:
    - put: slack-alert
      params:
        text: "Region Integration test failed"
    - task: delete-buckets
      config:
        inputs:
        - name: quickstart-repo
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: python
            tag: "3"
        params:
          AWS_ACCESS_KEY_ID: ((aws_admin_key_id))
          AWS_SECRET_ACCESS_KEY: ((aws_admin_secret_access_key))
        run:
          path: bash
          args:
          - -exc
          - |
            pushd quickstart-repo
            pip install boto3
            python ./ci/delete-buckets.py
            popd

image_resource: &image_resource
  image_resource:
    type: docker-image
    source:
      repository: python
      tag: "3"

check_task: &check_task
  task: check-cf-status
  attempts: 10
  config:
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cfplatformeng/quickstart-ci
    inputs:
    - name: om-release
    - name: quickstart-repo
    params:
      AWS_CF_PASSWORD: ((aws_cf_password))
      AWS_CF_DOMAIN: ((aws_cf_domain))
    run:
      path: bash
      args:
      - -exc
      - |
        mv om-release/om-linux /usr/local/bin/om
        chmod +x /usr/local/bin/om
        pushd quickstart-repo
        pip install -r requirements.txt
        sleep 30
        python ./ci/check-status.py
        popd

delete_task: &delete_task
  task: delete-cf
  config:
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cfplatformeng/quickstart-ci
    inputs:
    - name: quickstart-repo
    - name: aws-pcf-concourse-state
    params:
      AWS_ACCESS_KEY_ID: ((aws_admin_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_admin_secret_access_key))
      AWS_INTEGRATION_REGION: ((aws_integration_region))
    run:
      path: bash
      args:
      - -exc
      - |
        pushd quickstart-repo
        pip install -r requirements.txt
        python ./ci/delete-stack.py
        popd
  ensure:
    aggregate:
      - task: delete-buckets
        config:
          inputs:
          - name: quickstart-repo
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: python
              tag: "3"
          params:
            AWS_ACCESS_KEY_ID: ((aws_admin_key_id))
            AWS_SECRET_ACCESS_KEY: ((aws_admin_secret_access_key))
          run:
            path: bash
            args:
            - -exc
            - |
              pushd quickstart-repo
              pip install boto3
              python ./ci/delete-buckets.py
              popd

jobs:
- name: us-east-1-deploy
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: quickstart-repo
    - get: pivotal-cloudfoundry-template-alpha
  - task: integration-test
    config:
      platform: linux
      <<: *image_resource
      inputs:
      - name: quickstart-repo
      - name: pivotal-cloudfoundry-template-alpha
      outputs:
      - name: output
      params:
        <<: *some_values
        AWS_INTEGRATION_REGION: us-east-1
      run: *run
    on_failure: *on_failure
  - put: aws-pcf-concourse-state
    params:
      file: output/stackid

- name: us-east-1-test-cf
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: om-release
    - get: quickstart-repo
      passed:
      - us-east-1-deploy
      trigger: true
  - *check_task

- name: us-east-1-delete
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: quickstart-repo
      passed:
      - us-east-1-test-cf
      trigger: true
    - get: aws-pcf-concourse-state
  - *delete_task

- name: us-west-1-deploy
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: quickstart-repo
    - get: pivotal-cloudfoundry-template-alpha
  - task: integration-test
    config:
      platform: linux
      <<: *image_resource
      inputs:
      - name: quickstart-repo
      - name: pivotal-cloudfoundry-template-alpha
      outputs:
      - name: output
      params:
        <<: *some_values
        AWS_INTEGRATION_REGION: us-west-1
      run: *run
    on_failure: *on_failure
  - put: aws-pcf-concourse-state
    params:
      file: output/stackid

- name: us-west-1-test-cf
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: om-release
    - get: quickstart-repo
      passed:
      - us-west-1-deploy
      trigger: true
  - *check_task

- name: us-west-1-delete
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: quickstart-repo
      passed:
      - us-west-1-test-cf
      trigger: true
    - get: aws-pcf-concourse-state
  - *delete_task

- name: us-west-2-deploy
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: quickstart-repo
    - get: pivotal-cloudfoundry-template-alpha
  - task: integration-test
    config:
      platform: linux
      <<: *image_resource
      inputs:
      - name: quickstart-repo
      - name: pivotal-cloudfoundry-template-alpha
      outputs:
      - name: output
      params:
        <<: *some_values
        AWS_INTEGRATION_REGION: us-west-2
      run: *run
    on_failure: *on_failure
  - put: aws-pcf-concourse-state
    params:
      file: output/stackid

- name: us-west-2-test-cf
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: om-release
    - get: quickstart-repo
      passed:
      - us-west-2-deploy
      trigger: true
  - *check_task

- name: us-west-2-delete
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: quickstart-repo
      passed:
      - us-west-2-test-cf
      trigger: true
    - get: aws-pcf-concourse-state
  - *delete_task

- name: eu-central-1-deploy
  serial_groups: [integration]
  plan:
  - get: quickstart-repo
  - get: pivotal-cloudfoundry-template-alpha
  - task: integration-test
    config:
      platform: linux
      <<: *image_resource
      inputs:
      - name: quickstart-repo
      - name: pivotal-cloudfoundry-template-alpha
      outputs:
      - name: output
      params:
        <<: *some_values
        AWS_INTEGRATION_REGION: eu-central-1
      run: *run
    on_failure: *on_failure
  - put: aws-pcf-concourse-state
    params:
      file: output/stackid

- name: eu-central-1-test-cf
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: om-release
    - get: quickstart-repo
      passed:
      - eu-central-1-deploy
      trigger: true
  - *check_task

- name: eu-central-1-delete
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: quickstart-repo
      passed:
      - eu-central-1-test-cf
      trigger: true
    - get: aws-pcf-concourse-state
  - *delete_task

- name: eu-west-1-deploy
  serial_groups: [integration]
  plan:
  - get: quickstart-repo
  - get: pivotal-cloudfoundry-template-alpha
  - task: integration-test
    config:
      platform: linux
      <<: *image_resource
      inputs:
      - name: quickstart-repo
      - name: pivotal-cloudfoundry-template-alpha
      outputs:
      - name: output
      params:
        <<: *some_values
        AWS_INTEGRATION_REGION: eu-west-1
      run: *run
    on_failure: *on_failure
  - put: aws-pcf-concourse-state
    params:
      file: output/stackid

- name: eu-west-1-test-cf
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: om-release
    - get: quickstart-repo
      passed:
      - eu-west-1-deploy
      trigger: true
  - *check_task

- name: eu-west-1-delete
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: quickstart-repo
      passed:
      - eu-west-1-test-cf
      trigger: true
    - get: aws-pcf-concourse-state
  - *delete_task

- name: ap-southeast-2-deploy
  serial_groups: [integration]
  plan:
  - get: quickstart-repo
  - get: pivotal-cloudfoundry-template-alpha
  - task: integration-test
    config:
      platform: linux
      <<: *image_resource
      inputs:
      - name: quickstart-repo
      - name: pivotal-cloudfoundry-template-alpha
      outputs:
      - name: output
      params:
        <<: *some_values
        AWS_INTEGRATION_REGION: ap-southeast-2
      run: *run
    on_failure: *on_failure
  - put: aws-pcf-concourse-state
    params:
      file: output/stackid

- name: ap-southeast-2-test-cf
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: om-release
    - get: quickstart-repo
      passed:
      - ap-southeast-2-deploy
      trigger: true
  - *check_task

- name: ap-southeast-2-delete
  serial_groups: [integration]
  plan:
  - aggregate:
    - get: quickstart-repo
      passed:
      - ap-southeast-2-test-cf
      trigger: true
    - get: aws-pcf-concourse-state
  - *delete_task