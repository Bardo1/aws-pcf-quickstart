---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template will automatically deploy a reference architecture for the Pivotal Cloud Foundry stack.
  For a detailed guide on how to deploy this template, please read the instructions here <url>

Parameters:
  01NATKeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select the SSH keypair to use for the NAT vm
  02NATInstanceType:
    Type: String
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - m4.large
    - c4.large
    - m4.xlarge
    - c4.xlarge
    - c4.8xlarge
    ConstraintDescription: Instance Type must be of a valid EC2 type
    Default: t2.medium
    Description: Select the Instance Type to use for the NAT vm
  03OpsManagerIngress:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR range allowed to connect to Ops Manager instance
  04RdsDBName:
    Type: String
    MinLength: '4'
    Default: bosh
    Description: BOSH database name
  05RdsUsername:
    Type: String
    Description: BOSH database username
  06RdsPassword:
    Type: String
    NoEcho: 'true'
    MinLength: '8'
    Default: "ThisIsAPrettyWeakPassword"
    AllowedPattern: "[\\w-_]*"
    Description: BOSH database password
  07SSLCertificateARN:
    Type: String
    Description: ARN for pre-uploaded SSL certificate
  08OpsManagerTemplate:
    Type: String
    Default: https://s3-us-west-2.amazonaws.com/mombergm.us-west-2/pivotal/qs/ops-manager.json
    Description: S3 Location for OpsManager CloudFormation Template
  09CloudFoundryTemplate:
    Type: String
    Default: https://s3-us-west-2.amazonaws.com/mombergm.us-west-2/pivotal/qs/cloud-formation.json
    Description: S3 Location for Base Deployment CloudFormation Template
  10ElbPrefix:
    Type: String
    Default: ''
    Description: 'Prefix for the name of the ELBs generated. NOTE: Leave empty to use
      default prefix of AWS::StackName'
  11AllowHttpOnElb:
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'
    Description: 'Allow HTTP traffic on PCF-ELB port 80. Default: true.'
  12PivnetToken:
    Type: String
    Description: Using the Pivnet CLI requires a valid Pivotal Network API token. See
      https://network.pivotal.io/docs/api#how-to-authenticate
  13AdminEmail:
    Type: String
    Description: Admin email used by mysql monitor, for example
  14HostedZoneId:
    Type: String
    Description: Existing hosted zone to create DNS records under
  15Domain:
    Type: String
    Description: Root or subdomain for all Pivotal Cloud Foundry DNS entries (e.g. - example.com or pcf.example.com). Must match hosted zone.
  16OpsManagerAdminPassword:
    Type: String
    NoEcho: 'true'
    MinLength: '14'
    AllowedPattern: "[\\w-_]*"
    Description: Admin password to log on to OpsManager
  14PCFKeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select the SSH keypair to use for Ops Manager and all VMS in the deployment
  17PCFKeyPairPrivate:
    Type: String
    Description: Private half of PCFKeyPair, used as the key for all instance deployed via PCF BOSH. Replan \n with comma, because we hate you
    AllowedPattern: '^-----BEGIN RSA PRIVATE KEY-----,([+=/\w,]*),-----END RSA PRIVATE KEY-----$'

Mappings:
  ## Mapping of OpsManager AMI in AWS Regions.
  01OpsManagerAMI:
    ap-northeast-1: 
      "64": "ami-6088a607"
    ap-northeast-2: 
      "64": "ami-f831e396"
    ap-southeast-1: 
      "64": "ami-06e65e65"
    ap-southeast-2: 
      "64": "ami-93f6fff0"
    eu-west-1: 
      "64": "ami-cfc8cfa9"
    eu-central-1: 
      "64": "ami-cff72aa0"
    sa-east-1: 
      "64": "ami-921c71fe"
    us-east-1: 
      "64": "ami-8d48da9b"
    us-west-1: 
      "64": "ami-915470f1"
    us-west-2: 
      "64": "ami-483ba628"
Resources:
  ## cloud-formation.json
  01PCFBase:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        01NATKeyPair: !Ref 01NATKeyPair
        02NATInstanceType: !Ref 02NATInstanceType
        03OpsManagerIngress: !Ref 03OpsManagerIngress
        04RdsDBName: !Ref 04RdsDBName
        05RdsUsername: !Ref 05RdsUsername
        06RdsPassword: !Ref 06RdsPassword
        07SSLCertificateARN: !Ref 07SSLCertificateARN
        08OpsManagerTemplate: !Ref 08OpsManagerTemplate
        09ElbPrefix: !Ref 10ElbPrefix
        10AllowHttpOnElb: !Ref 11AllowHttpOnElb
        11PivnetToken: !Ref 12PivnetToken
        12AdminEmail: !Ref 13AdminEmail
      TemplateURL: !Ref 09CloudFoundryTemplate
  ## This Policy is for Allowing the OpsManager EC2 Instance access to the Describe stack and
  ## Stored Parameters.
  PCFDescribeStackPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "cloudformation:DescribeStacks"
            Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"
      PolicyName: !Sub ${AWS::StackName}-describe-stack
      Roles:
        - !GetAtt 01PCFBase.Outputs.PcfIamRole
  PCFParameterStorePolicy:
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action: 
              - "ssm:DescribeParameters"
              - "ssm:GetParameters"
            Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}.*"
      PolicyName: !Sub ${AWS::StackName}-parameter-store
      Roles:
        - !GetAtt 01PCFBase.Outputs.PcfIamRole
  ## This is the Start of our Secured Parameters
  PcfElbDnsName:      
    Type: "AWS::SSM::Parameter"
    Properties: 
      Name: !Sub "${AWS::StackName}.PcfElbDnsName"
      Description: PCF Provisioned ELB
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfElbDnsName
  PcfPublicSubnetAvailabilityZone:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfPublicSubnetAvailabilityZone"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfPublicSubnetAvailabilityZone
  PcfPrivateSubnetAvailabilityZone:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfPrivateSubnetAvailabilityZone"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfPrivateSubnetAvailabilityZone
  PcfPrivateSubnet2AvailabilityZone:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfPrivateSubnet2AvailabilityZone"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfPrivateSubnet2AvailabilityZone
  PcfElasticRuntimeS3DropletsBucket:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfElasticRuntimeS3DropletsBucket"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfElasticRuntimeS3DropletsBucket
  PcfIamRole:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfIamRole"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfIamRole
  PcfElbSshDnsName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfElbSshDnsName"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfElbSshDnsName
  PcfVmsSecurityGroupId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfVmsSecurityGroupId"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfVmsSecurityGroupId
  PcfElasticRuntimeS3BuildpacksBucket:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfElasticRuntimeS3BuildpacksBucket"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfElasticRuntimeS3BuildpacksBucket
  PcfVpc:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfVpc"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfVpc
  PcfPublicSubnetId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfPublicSubnetId"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfPublicSubnetId
  PcfRdsPassword:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfRdsPassword"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfRdsPassword
  PcfIamUserName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfIamUserName"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfIamUserName
  PcfPrivateSubnet2Id:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfPrivateSubnet2Id"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfPrivateSubnet2Id
  PcfRdsDBName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfRdsDBName"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfRdsDBName
  PcfOpsManagerS3Bucket:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfOpsManagerS3Bucket"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfOpsManagerS3Bucket
  PcfPublicSubnetId2:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfPublicSubnetId2"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfPublicSubnetId2
  PcfElasticRuntimeS3PackagesBucket:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfElasticRuntimeS3PackagesBucket"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfElasticRuntimeS3PackagesBucket
  PcfIamUserSecretAccessKey:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfIamUserSecretAccessKey"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfIamUserSecretAccessKey
  PcfIamUserAccessKey:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfIamUserAccessKey"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfIamUserAccessKey
  PcfRdsPort:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfRdsPort"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfRdsPort
  PcfRdsUsername:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfRdsUsername"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfRdsUsername
  PcfElbDnsName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfElbDnsName"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfElbDnsName
  PcfPrivateSubnetId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfPrivateSubnetId"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfPrivateSubnetId
  PcfElasticRuntimeS3ResourcesBucket:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfElasticRuntimeS3ResourcesBucket"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfElasticRuntimeS3ResourcesBucket
  PcfRdsAddress:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfRdsAddress"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfRdsAddress
  PcfElbTcpDnsName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfElbTcpDnsName"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfElbTcpDnsName
  PcfOpsManagerSecurityGroupId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfOpsManagerSecurityGroupId"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfOpsManagerSecurityGroupId
  PcfPublicSubnetAvailabilityZone2:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfPublicSubnetAvailabilityZone2"
      Description: Misc
      Type: String
      Value: !GetAtt 01PCFBase.Outputs.PcfPublicSubnetAvailabilityZone2
  PcfOpsManagerAdminPassword:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfOpsManagerAdminPassword"
      Description: Misc
      Type: String
      Value: !Ref 16OpsManagerAdminPassword
  PcfPrivateSSHKey:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "${AWS::StackName}.PcfPrivateSSHKey"
      Description: Misc
      Type: String
      Value:  !Join [ "\n", !Split [ ",", !Ref 17PCFKeyPairPrivate]]
  ## This is the End of our Secured Parameters
  ## This is the EC2 Ops Manager
  01OpsManagerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [01OpsManagerAMI, !Ref "AWS::Region", 64]
      InstanceType: m4.large
      IamInstanceProfile: !GetAtt 01PCFBase.Outputs.PcfIamInstanceProfile
      KeyName: !Ref 14PCFKeyPair
      Monitoring: true
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 100
            VolumeType: gp2
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !GetAtt 01PCFBase.Outputs.PcfOpsManagerSecurityGroupId
          SubnetId: !GetAtt 01PCFBase.Outputs.PcfPublicSubnetId
      SourceDestCheck: true 
      Tags:
        - Key: Name
          Value: "PCF Ops Manager"
      UserData: !Base64
        "Fn::Sub": |
          #!/bin/bash
          set -ex

          PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
          DEBIAN_FRONTEND=noninteractive apt-get update -y
          DEBIAN_FRONTEND=noninteractive apt-get install -y python3-dev python3-pip
          pip3 install --upgrade pip awscli

          mkdir -p /var/local/cloudformation/
          echo "{\"StackName\":\"${AWS::StackName}\",\"StackId\":\"${AWS::StackId}\",\"Region\":\"${AWS::Region}\"}" > /var/local/cloudformation/stack-meta.json
          chmod 0755 /var/local/cloudformation/stack-meta.json

          wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 --tries=15 \
              https://s3.amazonaws.com/quickstart-testing/quickstart-release.tgz \
              -O /tmp/quickstart-release.tgz

          tar -xvf /tmp/quickstart-release.tgz -C /home/ubuntu/
          chown -R ubuntu:ubuntu /home/ubuntu/quickstart
          su ubuntu -c /home/ubuntu/quickstart/bootstrap.sh

  02DNSOpsMan:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref 14HostedZoneId
      Name: !Join [ "", [ "opsman.", !Ref 15Domain] ]
      ResourceRecords:
        - !Sub "${01OpsManagerInstance.PublicIp}"
      TTL: 60
      Type: A
  03DNSStar:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref 14HostedZoneId
      Name: !Join [ "", [ "*.", !Ref 15Domain] ]
      ResourceRecords:
        - !GetAtt 01PCFBase.Outputs.PcfElbDnsName
      TTL: 60
      Type: CNAME
  04DNSSsh:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref 14HostedZoneId
      Name: !Join [ "", [ "ssh.sys.", !Ref 15Domain] ]
      ResourceRecords:
        - !GetAtt 01PCFBase.Outputs.PcfElbSshDnsName
      TTL: 60
      Type: CNAME
Outputs:
  OpsManager:
    Description: Url For Logging into OpsManager
    Value: !Join [ "", [ "https://opsman.", !Ref 15Domain] ]
